1) Observe o trecho de código abaixo:

int INDICE = 13, SOMA = 0, K = 0;

enquanto K < INDICE faça

{

K = K + 1;

SOMA = SOMA + K;

}

imprimir(SOMA);



Ao final do processamento, qual será o valor da variável SOMA?

Resposta 1) Valor de soma será 78.

int main()
{
    int indice = 13;
    int soma=0;
    for(int k=0; k<indice ;k++){
        soma=soma+k;
    }
    printf("%d",soma);

    return 0;
}


2) Dado a sequência de Fibonacci, onde se inicia por 0 e 1 e o próximo valor sempre será a soma dos 2 valores anteriores (exemplo: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34...), escreva um programa na linguagem que desejar onde, informado um número, ele calcule a sequência de Fibonacci e retorne uma mensagem avisando se o número informado pertence ou não a sequência.



IMPORTANTE:

Esse número pode ser informado através de qualquer entrada de sua preferência ou pode ser previamente definido no código;

Resposta 2):

int funcao(int num){
    int a=0,b=1,c;
        while (b <= num) {
        if (b == num) {
            return 1; // pertence a sequencia
        }
        c = a + b;
        a = b;
        b = c;
    }

    return 0; // nao pertence a sequencia
}

int main()
{
int numero=0;

    printf("Digite um numero: ");
    scanf("%d", &numero);

    if (funcao(numero)) {
        printf("%d pertence a sequencia de Fibonacci.\n", numero);
    } else {
        printf("%d nao pertence a sequencia de Fibonacci.\n", numero);
    }

    return 0;
}

5) Escreva um programa que inverta os caracteres de um string.


IMPORTANTE:

a) Essa string pode ser informada através de qualquer entrada de sua preferência ou pode ser previamente definida no código;

b) Evite usar funções prontas, como, por exemplo, reverse;

Resposta 5):

void funcao(char *str) {
    int tamanho = strlen(str);
    for (int i = 0; i < tamanho / 2; i++) {
        char temp = str[i];
        str[i] = str[tamanho - i - 1];
        str[tamanho - i - 1] = temp;
    }
}

int main() {
    char vet[]="Vasco Da Gama";

    funcao(vet);

    printf("String invertida: %s\n", vet);

    return 0;
}

